services:
  flask:
    build:
      context: ./flask/
      args:
        DOCKER_BUILDKIT: 1
    hostname: flask
    expose:
      - 5000
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.flask.rule=Host(`127.0.0.1`) || Host(`localhost`) || Host(`192.168.1.112`)"
      - "traefik.http.routers.flask.tls=true"
      - "traefik.http.routers.flask.entrypoints=websecure"
      - "traefik.http.services.flask.loadbalancer.server.port=5000"
    depends_on:
      - traefik
    volumes:
      - ./static:/static:ro
      - ./flask:/flask:ro
    environment:
      FLASK_DEBUG: 1
    #command: sh -c "gunicorn -w 4 -b 0.0.0.0:5000 'flaskapp:create_app()'"
    command: ["/startup-dev.sh"]

  traefik:
    build: ./traefik/
    hostname: traefik
    command:
      - --providers.docker
      - --providers.docker.exposedByDefault=false
      - --providers.file.directory=/configuration/
      - --entryPoints.websecure.address=:8449
      - --entryPoints.ping.address=:80
      - --ping.entryPoint=ping
    ports:
      - "8449:8449"
    volumes:
      # so Traefik can listen to Docker events
      - /var/run/docker.sock:/var/run/docker.sock
    healthcheck:
      test: wget --quiet --tries=1 --spider http://127.0.0.1/ping || exit 1
      interval: 10s
      timeout: 1s
      retries: 3
      start_period: 10s
